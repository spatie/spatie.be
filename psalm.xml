<?xml version="1.0"?>
<psalm
        totallyTyped="false"
        errorLevel="4"
        resolveFromConfigFile="true"
        useDocblockPropertyTypes="true"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="https://getpsalm.org/schema/config"
        xsi:schemaLocation="https://getpsalm.org/schema/config vendor/vimeo/psalm/config.xsd"
>
    <projectFiles>
        <directory name="app"/>
        <ignoreFiles>
            <directory name="vendor"/>
        </ignoreFiles>
    </projectFiles>

    <issueHandlers>
        <!-- https://github.com/psalm/psalm-plugin-laravel/issues/62 -->
        <InvalidArgument errorLevel="suppress" />

        <!-- https://github.com/psalm/psalm-plugin-laravel/issues/62 -->
        <UndefinedMagicMethod errorLevel="suppress" />

        <!-- https://github.com/psalm/psalm-plugin-laravel/issues/62 -->
        <UndefinedPropertyFetch errorLevel="suppress" />

        <!-- Suppressed until https://github.com/inertiajs/inertia-laravel/pull/112 is fixed -->
        <!-- Temporary Unsuppressed because of the rule above (https://github.com/psalm/psalm-plugin-laravel/issues/62) -->
        <!--        <InvalidArgument>-->
        <!--            <errorLevel type="suppress">-->
        <!--                <referencedFunction name="inertia"/>-->
        <!--            </errorLevel>-->
        <!--        </InvalidArgument>-->

        <!--
            Suppressed because we don't want to cast UUID classes to strings when using AggregateRoot::retrieve.
            We might want to fix this in spatie/laravel-event-sourcing
        -->
        <ImplicitToStringCast errorLevel="suppress"/>
    </issueHandlers>
    <plugins>
    </plugins>
</psalm>
